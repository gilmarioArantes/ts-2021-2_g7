{
	"info": {
		"_postman_id": "8c28471d-6584-4690-8dde-361989a4eafd",
		"name": "Deck of Cards - API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Tests",
			"item": [
				{
					"name": "API Check Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Feito por Michelly Lima\r",
									"\r",
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://deckofcardsapi.com/",
							"protocol": "https",
							"host": [
								"deckofcardsapi",
								"com"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Deck id does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Feito por Fernando Severino",
									"",
									"pm.test(\"Not found status test.\", function(){",
									"    pm.expect(pm.response.code).to.eql(404);",
									"});",
									"",
									"pm.test(\"Returns json.\", function(){",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response Body test.\", function(){",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.error).to.eql('Deck ID does not exist.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}non_existent_ID/return",
							"host": [
								"{{baseURL}}non_existent_ID"
							],
							"path": [
								"return"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pile name does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Feito por Fernando Severino",
									"",
									"pm.test(\"Not found status test.\", function(){",
									"    pm.expect(pm.response.code).to.eql(404);",
									"});",
									"",
									"pm.test(\"Returns json.\", function(){",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response Body test.\", function(){",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson.success).to.eql(false);",
									"    pm.expect(responseJson.error).to.eql('The pile, pile_name does not exist.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}{{deck_id}}/pile/pile_name/return/",
							"host": [
								"{{baseURL}}{{deck_id}}"
							],
							"path": [
								"pile",
								"pile_name",
								"return",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "deck_id",
			"value": "c3xlqlnbgpkq"
		},
		{
			"key": "baseURL",
			"value": "https://deckofcardsapi.com/api/deck/"
		},
		{
			"key": "deckCount",
			"value": "2"
		},
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "remaining",
			"value": ""
		},
		{
			"key": "pile_name",
			"value": "playerOne",
			"type": "string"
		}
	]
}